{"version":3,"sources":["pages/NavBar.tsx","pages/ImageTool.tsx","pages/HowToUse.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["rootURL","NavBar","props","Navbar","bg","variant","to","Brand","Nav","className","Link","ImageTool","useState","shareURL","setShareURL","generated","setGenerated","rawURL","setRawURL","mdTag","setMdTag","imgTag","setImgTag","execCopy","string","temp","document","createElement","value","selectionStart","selectionEnd","length","s","style","position","left","body","appendChild","focus","result","execCommand","blur","removeChild","Container","Row","Form","Control","type","placeholder","onChange","e","target","Button","onClick","alert","tmp","replace","InputGroup","Prepend","readOnly","src","HowToUse","App","exact","path","component","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b42c07c3.chunk.js","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport { Navbar, Nav, Button, Modal, Form, FormControl } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nconst rootURL = \"/g-drive-image-tag-tool\";\ntype Props = any;\n\nconst NavBar: React.FC<Props> = (props) => {\n  return (\n    <Navbar bg=\"primary\" variant=\"dark\">\n      <LinkContainer to={rootURL+\"/\"}>\n        <Navbar.Brand>g-drive-image-tag-tool</Navbar.Brand>\n      </LinkContainer>\n      <Nav className=\"mr-auto\">\n        <LinkContainer to={rootURL+\"/\"}>\n          <Nav.Link>アプリ</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to={rootURL+\"/howtouse\"}>\n          <Nav.Link>HowToUse</Nav.Link>\n        </LinkContainer>\n      </Nav>\n      <Nav>\n        <div>\n          \n        </div>\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default NavBar;","import React, { Component, useEffect, useState } from \"react\";\nimport { Navbar, Nav, Button, Modal, Form, FormControl, Container, Row, InputGroup } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\ntype Props = any;\n\nconst ImageTool: React.FC<Props> = (props) => {\n  const [shareURL, setShareURL] = useState(\"\");\n  const [generated, setGenerated] = useState(false);\n  const [rawURL, setRawURL] = useState(\"\");\n  const [mdTag, setMdTag] = useState(\"\");\n  const [imgTag, setImgTag] = useState(\"\");\n  const handleOnChangeShareURL = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setShareURL(e.target.value);\n  }\n  const handleOnClickedGenerateBtn = () => {\n    if (shareURL === \"\") {\n      alert(\"共有URLを入力してください\");\n    } else {\n      let tmp = shareURL;\n      tmp = tmp.replace(\"https://drive.google.com/file/d/\", \"\");\n      tmp = tmp.replace(\"/view?usp=sharing\", \"\");\n      tmp = \"http://drive.google.com/uc?export=view&id=\" + tmp + \"#image.png\";\n      setMdTag(\"![テキスト](\" + tmp + \")\");\n      setImgTag(\"<img src=\\\"\" + tmp + \"\\\" />\");\n      setRawURL(tmp);\n      setGenerated(true);\n    }\n\n  }\n  function execCopy(string: string) {\n    var temp = document.createElement('textarea');\n\n    temp.value = string;\n    temp.selectionStart = 0;\n    temp.selectionEnd = temp.value.length;\n\n    var s = temp.style;\n    s.position = 'fixed';\n    s.left = '-100%';\n\n    document.body.appendChild(temp);\n    temp.focus();\n    var result = document.execCommand('copy');\n    temp.blur();\n    document.body.removeChild(temp);\n    // true なら実行できている falseなら失敗か対応していないか\n    return result;\n  }\n\n  const handleOnClickCopyRawURL = () => {\n    execCopy(rawURL);\n  }\n  const handleOnClickCopyMdTag = () => {\n    execCopy(mdTag);\n  }\n  const handleOnClickCopyImgTag = () => {\n    execCopy(imgTag);\n  }\n  return (\n    <div>\n      <Container>\n        <Row className=\"text-center\">\n          <h3 className=\"text-center\">imgタグ変換ツール</h3>\n        </Row>\n        <Row>\n\n          <Form.Control type=\"text\" placeholder=\"共有URL\" onChange={handleOnChangeShareURL} />\n        </Row>\n        <Row><Button onClick={handleOnClickedGenerateBtn} className=\"text-center mt-1\">生成</Button></Row>\n        {generated ?\n          <div className=\"mt-3\">\n            <Row>\n              画像への直接リンク<br />\n              <InputGroup className=\"mb-3\">\n                <InputGroup.Prepend>\n                  <Button variant=\"outline-secondary\" onClick={handleOnClickCopyRawURL}>Copy</Button>\n                </InputGroup.Prepend>\n                <Form.Control type=\"text\" placeholder=\"Normal text\" value={rawURL} readOnly />\n              </InputGroup>\n            </Row>\n            <Row>\n              MarkDownタグ<br />\n              <InputGroup className=\"mb-3\">\n                <InputGroup.Prepend>\n                  <Button variant=\"outline-secondary\" onClick={handleOnClickCopyMdTag}>Copy</Button>\n                </InputGroup.Prepend>\n                <Form.Control type=\"text\" placeholder=\"Normal text\" value={mdTag} readOnly />\n              </InputGroup>\n            </Row>\n            <Row>\n              HTML imgタグ<br />\n              <InputGroup className=\"mb-3\">\n                <InputGroup.Prepend>\n                  <Button variant=\"outline-secondary\" onClick={handleOnClickCopyImgTag}>Copy</Button>\n                </InputGroup.Prepend>\n                <Form.Control type=\"text\" placeholder=\"Normal text\" value={imgTag} readOnly />\n              </InputGroup>\n            </Row>\n            <Row>\n              画像プレビュー（生成が正しく行われていると下に画像が表示されます）<br/>\n          <img src={rawURL} />\n            </Row>\n            <br />\n            <br />\n\n          </div>\n          :\n          <div className=\"mt-3\">\n            GoogleDriveで作った画像の共有URLを<br />貼って生成ボタンを押してください。\n        </div>\n        }\n      </Container>\n\n\n    </div>\n  );\n};\n\nexport default ImageTool;","import React, { Component, useEffect, useState } from \"react\";\nimport { Navbar, Nav, Button, Modal, Form, FormControl } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\ntype Props = any;\n\nconst HowToUse: React.FC<Props> = (props) => {\n  return (\n    <div></div>\n  );\n};\n\nexport default HowToUse;","import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport React, { Component } from 'react'\nimport NavBar from \"./pages/NavBar\";\nimport ImageTool from \"./pages/ImageTool\";\nimport HowToUse from \"./pages/HowToUse\";\nconst rootURL = \"/g-drive-image-tag-tool\";\nclass App extends Component {\n  \n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            <NavBar />\n            <Route exact path= {rootURL + \"/\"} component={ImageTool} />\n            <Route exact path={rootURL + \"/howtouse\"} component={HowToUse} />\n          </div>\n        </Router>\n\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}